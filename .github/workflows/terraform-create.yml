name : 'DigitalOcean create'

on:
  workflow_dispatch:
    inputs:
      region:
        description: 'region'
        required: true
        default: 'sgp1'
      instance_count:
        description: 'instance count'
        required: true
        default: '3'
      instance_size:
        description: 'instance size'
        required: true
        default: 's-1vcpu-1gb'
jobs:
  droplet:
      name: 'Create Droplet'
      runs-on: ubuntu-latest
      env:
        do_token: ${{ secrets.DO_TOKEN }}
        ssh_key: ${{ secrets.SSH_KEY }}
        fingerprint: ${{ secrets.FINGERPRINT }}
      defaults:
        run:
          shell: bash

      steps:
        # Checkout the repository to the GitHub Actions runner
        - name: Checkout
          uses: actions/checkout@v2

        - name: set key
          run: echo -e "${{ env.ssh_key }}" > id_rsa.pub

        # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v1
          with:
            cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

        # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
        - name: Terraform Init
          working-directory: ./digitalocean/modules
          run: terraform init

        # Checks that all Terraform configuration files adhere to a canonical format
        - name: Terraform Format
          working-directory: ./digitalocean
          run: terraform fmt -check

        # Generates an execution plan for Terraform
        - name: Terraform Plan
          working-directory: ./digitalocean/modules
          run: >
          terraform plan -var "do_token=${{ env.do_token }}"
          -var "ssh_key=${{ env.ssh_key }}" 
          -var "fingerprint=${{ env.fingerprint }}" 
          -var "region=${{ github.event.inputs.region }}" 
          -var "size=${{ github.event.inputs.instance_size }}" 
          -var "droplet_count=${{ github.event.inputs.instance_count }}"

          # On push to main, build or change infrastructure according to Terraform configuration files
          # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
        - name: Terraform Apply
          working-directory: ./digitalocean/modules
          run: >
          terraform apply -auto-approve 
          -var "do_token=${{ env.do_token }}" 
          -var "ssh_key=${{ env.ssh_key }}" 
          -var "fingerprint=${{ env.fingerprint }}" 
          -var "region=${{ github.event.inputs.region }}" 
          -var "size=${{ github.event.inputs.instance_size }}" 
          -var "droplet_count=${{ github.event.inputs.instance_count }}"